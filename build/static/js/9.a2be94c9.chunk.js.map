{"version":3,"sources":["../node_modules/react-bootstrap/esm/Container.js","SwapComponent/SwapPortal/notification.js","Assets/Links/Crypt3d Punks Unreveal Wrapper.webm","SwapComponent/SwapPortal/SwapPortal.js"],"names":["Container","React","ref","bsPrefix","fluid","as","Component","className","props","prefix","useBootstrapPrefix","suffix","_jsx","classNames","displayName","defaultProps","notifySuccess","message","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","notifyInfo","info","notifyError","error","PersonalNftInfo","oldCryptContract","cryptContract","account","connectWallet","useState","isApproved","setIsApproved","swapIds","setSwapIds","useEffect","run","isApprovedForAll","final","crypt3dPunksAddress","isApprovedRes","oneArr","twoArr","i","push","balanceOfBatch","bal","map","curr","parseInt","_hex","ids","forEach","console","log","approveContract","setApprovalForAll","transaction","wait","swapTokens","batchSwapExistingUsers","transactionReceipt","newestOnTop","rtl","pauseOnFocusLoss","Row","xs","sm","lg","Col","style","backgroundColor","width","src","SwapImage","alt","marginTop","length","marginLeft","marginRight","String","substring","slice","disabled","onClick"],"mappings":"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","file":"static/js/9.a2be94c9.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  fluid: false\n};\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nContainer.defaultProps = defaultProps;\nexport default Container;","import { toast } from \"react-toastify\";\n\nconst notifySuccess = (message) =>\n  toast.success(message, {\n    position: \"bottom-right\",\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: \"dark\",\n  });\nconst notifyInfo = (message) =>\n  toast.info(message, {\n    position: \"bottom-right\",\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: \"dark\",\n  });\nconst notifyError = (message) =>\n  toast.error(message, {\n    position: \"bottom-right\",\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: \"dark\",\n  });\n\n// TOASTIFY REALTED FUNCTIONS\n\nexport { notifySuccess, notifyInfo, notifyError };\n","export default __webpack_public_path__ + \"static/media/Crypt3d Punks Unreveal Wrapper.6bb5e4b1.webm\";","import React, { useState, useEffect } from \"react\";\nimport { notifySuccess, notifyInfo, notifyError } from \"./notification\";\nimport SwapImage from \"../../Assets/Links/Crypt3d Punks Unreveal Wrapper.webm\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"./SwapPortal.css\";\nimport { Container } from \"react-bootstrap\";\nimport { ToastContainer } from \"react-toastify\";\n\nimport { final } from \"./../../web3Components/config\";\n\nconst PersonalNftInfo = ({\n  oldCryptContract,\n  cryptContract,\n  account,\n  connectWallet,\n}) => {\n  const [isApproved, setIsApproved] = useState(false);\n  const [swapIds, setSwapIds] = useState([]);\n\n  useEffect(() => {\n    const run = async () => {\n      try {\n        const isApprovedRes = await oldCryptContract.isApprovedForAll(\n          account,\n          final.crypt3dPunksAddress\n        );\n\n        let oneArr = [];\n        let twoArr = [];\n\n        for (let i = 0; i < 17; i++) {\n          oneArr.push(account);\n          twoArr.push(i);\n        }\n\n        let bal = await oldCryptContract.balanceOfBatch(oneArr, twoArr);\n\n        bal = bal.map((curr) => {\n          return parseInt(curr._hex);\n        });\n\n        const ids = [];\n        bal.forEach((curr, i) => {\n          if (curr === 1) {\n            ids.push(i);\n          }\n        });\n\n        setSwapIds(ids);\n\n        console.log(ids);\n\n        setIsApproved(isApprovedRes);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    if (account && oldCryptContract) {\n      run();\n    }\n\n    return () => {\n      setIsApproved(false);\n      setSwapIds([]);\n    };\n  }, [account, oldCryptContract]);\n\n  const approveContract = async () => {\n    try {\n      notifyInfo(\"Your Transaction Has Started\");\n      const transaction = await oldCryptContract.setApprovalForAll(\n        final.crypt3dPunksAddress,\n        true\n      );\n\n      const transactionReceipt = await transaction.wait();\n\n      notifySuccess(\"Approved!\");\n\n      setIsApproved(true);\n    } catch (err) {\n      console.log(err.message);\n\n      notifyError(\"Something Went Wrong\");\n    }\n  };\n\n  const swapTokens = async () => {\n    try {\n      notifyInfo(\"Your Transaction Has Started\");\n      const transaction = await cryptContract.batchSwapExistingUsers(swapIds);\n      const transactionReceipt = await transaction.wait();\n      notifySuccess(\"Your NFT is Swapped successfully\");\n\n      console.log(transactionReceipt);\n    } catch (err) {\n      notifyError(\"Something Went Wrong\");\n      if (err?.message === \"quantity exceeded the limit for this round\") {\n        notifyError(\"Quantity exceeded the limit for this round\");\n      } else if (err?.message === \"You don't own this nftId\") {\n        notifyError(\"You are not the owner of this NFT\");\n      } else {\n        notifyError(\"Something Went Wrong\");\n      }\n    }\n  };\n\n  return (\n    <div className=\"PersonalNftInfoTable\">\n      <ToastContainer\n        position=\"bottom-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        theme=\"dark\"\n        pauseOnHover\n      />\n      <Container>\n        <Row xs={1} sm={1} lg={2} className=\"\">\n          <Col style={{ backgroundColor: \"#6CB8D9\" }} className=\"pt-5 pb-5\">\n            <div data-aos=\"fade-left\" data-aos-duration=\"2000\">\n              <div>\n                <span className=\"text-mint-pot\">\n                  <span\n                    className=\"shadow-txt\"\n                    data-aos=\"fade-in\"\n                    data-aos-duration=\"3000\"\n                  >\n                    SWAP PORTAL\n                  </span>\n                </span>\n                <p className=\"portal-txt\">\n                  Swap your old ERC-1155 Crypt3d Punk NFT for your new, shiny,\n                  ERC-721 Crtyp3d Punk NFT here.\n                </p>\n              </div>\n              <img width=\"70%\" src={SwapImage} alt=\"\" />\n              <h3 style={{ marginTop: \"20px\" }}>\n                ERC-1155 Punks in Wallet: {swapIds.length}\n              </h3>\n              <div className=\"mt-3\">\n                <p\n                  style={{\n                    width: \"80%\",\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\",\n                  }}\n                  className=\"Connect_walletx\"\n                >{`${String(account).substring(0, 5)}...${String(account).slice(\n                  -5\n                )}`}</p>\n                {account ? (\n                  isApproved ? (\n                    <>\n                      <button\n                        disabled={swapIds.length === 0}\n                        onClick={swapTokens}\n                        className=\"Connect_wallet\"\n                      >\n                        Swap\n                      </button>\n                    </>\n                  ) : (\n                    <>\n                      <button\n                        disabled={swapIds.length === 0}\n                        onClick={approveContract}\n                        className=\"Connect_wallet\"\n                      >\n                        Approve\n                      </button>\n                    </>\n                  )\n                ) : (\n                  <button onClick={connectWallet} className=\"Connect_wallet\">\n                    CONNECT WALLET\n                  </button>\n                )}\n                <p className=\"CompletePrice\">Complete Pricing Guide</p>\n              </div>\n            </div>\n          </Col>\n          <Col style={{ backgroundColor: \"#E5F9FD\" }}></Col>\n        </Row>{\" \"}\n      </Container>\n    </div>\n  );\n};\nexport default PersonalNftInfo;\n"],"sourceRoot":""}